api:
  meta:
    name: UserService
    type: api
    description: Supports CREATE, UPDATE, DELETE, FINDBYID, and viewFriendsById functionality.
    tags:
    - user
    - auth
    - crud
    - demo
  CREATE:
    param:
      id: string
      user: string (required)
      password: string (required)
      birthday: date
      register_date: datetime
      last_login: datetime
      friend_ids: list[string]
    rule:
    - validate: user != null
    - validate: password != null
    - auth_required: true
    logic:
      service_call: exampleService.create(param)
      comment: Create operation for new user. Validate identity and required fields
        before storing.
    output:
      status: success | failure
      data: created user object or error message
  UPDATE:
    param:
      id: string (required)
      user: string
      password: string
      birthday: date
      last_login: datetime
    rule:
    - validate: id != null
    - auth_required: true
    logic:
      service_call: exampleService.update(param)
    output:
      status: success | failure
      data: updated user object or error
  DELETE:
    param:
      id: string (required)
    rule:
    - validate: id != null
    - auth_required: true
    logic:
      service_call: exampleService.delete(param.id)
    output:
      status: success | failure
      message: deletion result
  FINDBYID:
    param:
      id: string (required)
    rule:
    - validate: id != null
    - auth_required: true
    logic:
      service_call: exampleService.findById(param.id)
    output:
      status: success | failure
      data: user object or not found message
  viewFriendsById:
    param:
      id: string (required)
    rule:
    - validate: id != null
    - auth_required: true
    logic:
      service_call: exampleService.viewFriendsById(param.id)
    output:
      status: success | failure
      data: list of friend IDs or user records
